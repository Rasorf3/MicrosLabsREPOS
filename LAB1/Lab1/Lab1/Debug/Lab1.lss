
Lab1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000a50  00000ac4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a50  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000ac8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000af8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  00000b38  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e03  00000000  00000000  00000bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000991  00000000  00000000  000019c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005ca  00000000  00000000  00002354  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d8  00000000  00000000  00002920  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004b5  00000000  00000000  000029f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003f1  00000000  00000000  00002ead  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  0000329e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
   4:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
   8:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
   c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  10:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  14:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  18:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  1c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  20:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  24:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  28:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  2c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  30:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  34:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  38:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  3c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  40:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  44:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  48:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  4c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  50:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  54:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  58:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  5c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  60:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  64:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 40       	sbci	r16, 0x00	; 0
  6a:	7a 10       	cpse	r7, r10
  6c:	f3 5a       	subi	r31, 0xA3	; 163
  6e:	00 a0       	ldd	r0, Z+32	; 0x20
  70:	72 4e       	sbci	r23, 0xE2	; 226
  72:	18 09       	sbc	r17, r8
  74:	00 10       	cpse	r0, r0
  76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__stack+0xc3>
  78:	e8 00       	.word	0x00e8	; ????
  7a:	00 e8       	ldi	r16, 0x80	; 128
  7c:	76 48       	sbci	r23, 0x86	; 134
  7e:	17 00       	.word	0x0017	; ????
  80:	00 e4       	ldi	r16, 0x40	; 64
  82:	0b 54       	subi	r16, 0x4B	; 75
  84:	02 00       	.word	0x0002	; ????
  86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
  88:	9a 3b       	cpi	r25, 0xBA	; 186
  8a:	00 00       	nop
  8c:	00 e1       	ldi	r16, 0x10	; 16
  8e:	f5 05       	cpc	r31, r5
  90:	00 00       	nop
  92:	80 96       	adiw	r24, 0x20	; 32
  94:	98 00       	.word	0x0098	; ????
  96:	00 00       	nop
  98:	40 42       	sbci	r20, 0x20	; 32
  9a:	0f 00       	.word	0x000f	; ????
  9c:	00 00       	nop
  9e:	a0 86       	std	Z+8, r10	; 0x08
  a0:	01 00       	.word	0x0001	; ????
  a2:	00 00       	nop
  a4:	10 27       	eor	r17, r16
  a6:	00 00       	nop
  a8:	00 00       	nop
  aa:	e8 03       	fmulsu	r22, r16
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	64 00       	.word	0x0064	; ????
  b2:	00 00       	nop
  b4:	00 00       	nop
  b6:	0a 00       	.word	0x000a	; ????
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	01 00       	.word	0x0001	; ????
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	2c 76       	andi	r18, 0x6C	; 108
  c4:	d8 88       	ldd	r13, Y+16	; 0x10
  c6:	dc 67       	ori	r29, 0x7C	; 124
  c8:	4f 08       	sbc	r4, r15
  ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
  cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
  ce:	ae 59       	subi	r26, 0x9E	; 158
  d0:	e1 b1       	in	r30, 0x01	; 1
  d2:	b7 96       	adiw	r30, 0x27	; 39
  d4:	e5 e3       	ldi	r30, 0x35	; 53
  d6:	e4 53       	subi	r30, 0x34	; 52
  d8:	c6 3a       	cpi	r28, 0xA6	; 166
  da:	e6 51       	subi	r30, 0x16	; 22
  dc:	99 76       	andi	r25, 0x69	; 105
  de:	96 e8       	ldi	r25, 0x86	; 134
  e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <dtoa_prf+0x134>
  e2:	84 26       	eor	r8, r20
  e4:	eb 89       	ldd	r30, Y+19	; 0x13
  e6:	8c 9b       	sbis	0x11, 4	; 17
  e8:	62 ed       	ldi	r22, 0xD2	; 210
  ea:	40 7c       	andi	r20, 0xC0	; 192
  ec:	6f fc       	.word	0xfc6f	; ????
  ee:	ef bc       	out	0x2f, r14	; 47
  f0:	9c 9f       	mul	r25, r28
  f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
  f4:	ba a5       	ldd	r27, Y+42	; 0x2a
  f6:	6f a5       	ldd	r22, Y+47	; 0x2f
  f8:	f4 90       	lpm	r15, Z
  fa:	05 5a       	subi	r16, 0xA5	; 165
  fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
  fe:	5c 93       	st	X, r21
 100:	6b 6c       	ori	r22, 0xCB	; 203
 102:	f9 67       	ori	r31, 0x79	; 121
 104:	6d c1       	rjmp	.+730    	; 0x3e0 <__divsf3_pse+0x78>
 106:	1b fc       	.word	0xfc1b	; ????
 108:	e0 e4       	ldi	r30, 0x40	; 64
 10a:	0d 47       	sbci	r16, 0x7D	; 125
 10c:	fe f5       	brtc	.+126    	; 0x18c <__bad_interrupt>
 10e:	20 e6       	ldi	r18, 0x60	; 96
 110:	b5 00       	.word	0x00b5	; ????
 112:	d0 ed       	ldi	r29, 0xD0	; 208
 114:	90 2e       	mov	r9, r16
 116:	03 00       	.word	0x0003	; ????
 118:	94 35       	cpi	r25, 0x54	; 84
 11a:	77 05       	cpc	r23, r7
 11c:	00 80       	ld	r0, Z
 11e:	84 1e       	adc	r8, r20
 120:	08 00       	.word	0x0008	; ????
 122:	00 20       	and	r0, r0
 124:	4e 0a       	sbc	r4, r30
 126:	00 00       	nop
 128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
 12a:	0c 33       	cpi	r16, 0x3C	; 60
 12c:	33 33       	cpi	r19, 0x33	; 51
 12e:	33 0f       	add	r19, r19
 130:	98 6e       	ori	r25, 0xE8	; 232
 132:	12 83       	std	Z+2, r17	; 0x02
 134:	11 41       	sbci	r17, 0x11	; 17
 136:	ef 8d       	ldd	r30, Y+31	; 0x1f
 138:	21 14       	cp	r2, r1
 13a:	89 3b       	cpi	r24, 0xB9	; 185
 13c:	e6 55       	subi	r30, 0x56	; 86
 13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
 140:	fe e6       	ldi	r31, 0x6E	; 110
 142:	db 18       	sub	r13, r11
 144:	d1 84       	ldd	r13, Z+9	; 0x09
 146:	4b 38       	cpi	r20, 0x8B	; 139
 148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
 14a:	7c 1d       	adc	r23, r12
 14c:	90 1d       	adc	r25, r0
 14e:	a4 bb       	out	0x14, r26	; 20
 150:	e4 24       	eor	r14, r4
 152:	20 32       	cpi	r18, 0x20	; 32
 154:	84 72       	andi	r24, 0x24	; 36
 156:	5e 22       	and	r5, r30
 158:	81 00       	.word	0x0081	; ????
 15a:	c9 f1       	breq	.+114    	; 0x1ce <LCD_Init+0x18>
 15c:	24 ec       	ldi	r18, 0xC4	; 196
 15e:	a1 e5       	ldi	r26, 0x51	; 81
 160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
 162:	11 24       	eor	r1, r1
 164:	1f be       	out	0x3f, r1	; 63
 166:	cf ef       	ldi	r28, 0xFF	; 255
 168:	d8 e0       	ldi	r29, 0x08	; 8
 16a:	de bf       	out	0x3e, r29	; 62
 16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
 16e:	11 e0       	ldi	r17, 0x01	; 1
 170:	a0 e0       	ldi	r26, 0x00	; 0
 172:	b1 e0       	ldi	r27, 0x01	; 1
 174:	e0 e5       	ldi	r30, 0x50	; 80
 176:	fa e0       	ldi	r31, 0x0A	; 10
 178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
 17a:	05 90       	lpm	r0, Z+
 17c:	0d 92       	st	X+, r0
 17e:	a4 30       	cpi	r26, 0x04	; 4
 180:	b1 07       	cpc	r27, r17
 182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>
 184:	0e 94 35 01 	call	0x26a	; 0x26a <main>
 188:	0c 94 26 05 	jmp	0xa4c	; 0xa4c <_exit>

0000018c <__bad_interrupt>:
 18c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000190 <LCD_Command>:
	LCD_Command(LCD_CLEAR);
}

void LCD_Command(unsigned char command)
{
	LCD_DATA = command;
 190:	85 b9       	out	0x05, r24	; 5
	PORTD &= ~(1 << RS_LCD); //Colocamos RS_LCD en 0
 192:	8b b1       	in	r24, 0x0b	; 11
 194:	8b 7f       	andi	r24, 0xFB	; 251
 196:	8b b9       	out	0x0b, r24	; 11
	PORTD &= ~(1 << EN_LCD); //EN_LCD en 0
 198:	8b b1       	in	r24, 0x0b	; 11
 19a:	87 7f       	andi	r24, 0xF7	; 247
 19c:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 19e:	83 e0       	ldi	r24, 0x03	; 3
 1a0:	8a 95       	dec	r24
 1a2:	f1 f7       	brne	.-4      	; 0x1a0 <LCD_Command+0x10>
 1a4:	00 00       	nop
	_delay_us(10);
	PORTD |= (1 << EN_LCD); //EN_LCD en 1
 1a6:	8b b1       	in	r24, 0x0b	; 11
 1a8:	88 60       	ori	r24, 0x08	; 8
 1aa:	8b b9       	out	0x0b, r24	; 11
 1ac:	81 e2       	ldi	r24, 0x21	; 33
 1ae:	8a 95       	dec	r24
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <LCD_Command+0x1e>
 1b2:	00 00       	nop
 1b4:	08 95       	ret

000001b6 <LCD_Init>:
#include "LCD_Module.h"


void LCD_Init()
{
	DDRB = 0xFF; 
 1b6:	8f ef       	ldi	r24, 0xFF	; 255
 1b8:	84 b9       	out	0x04, r24	; 4
	DDRD |= (1<<RS_LCD) | (1 << EN_LCD);
 1ba:	8a b1       	in	r24, 0x0a	; 10
 1bc:	8c 60       	ori	r24, 0x0C	; 12
 1be:	8a b9       	out	0x0a, r24	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1c0:	85 ea       	ldi	r24, 0xA5	; 165
 1c2:	9e e0       	ldi	r25, 0x0E	; 14
 1c4:	01 97       	sbiw	r24, 0x01	; 1
 1c6:	f1 f7       	brne	.-4      	; 0x1c4 <LCD_Init+0xe>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <LCD_Init+0x14>
 1ca:	00 00       	nop
	
	//Comandos Iniciales al encender EL LCD
	_delay_ms(15);
	LCD_Command(0x30);
 1cc:	80 e3       	ldi	r24, 0x30	; 48
 1ce:	0e 94 c8 00 	call	0x190	; 0x190 <LCD_Command>
 1d2:	80 e0       	ldi	r24, 0x00	; 0
 1d4:	94 e0       	ldi	r25, 0x04	; 4
 1d6:	01 97       	sbiw	r24, 0x01	; 1
 1d8:	f1 f7       	brne	.-4      	; 0x1d6 <LCD_Init+0x20>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <LCD_Init+0x26>
 1dc:	00 00       	nop
	_delay_ms(4.1);
	LCD_Command(0x30);
 1de:	80 e3       	ldi	r24, 0x30	; 48
 1e0:	0e 94 c8 00 	call	0x190	; 0x190 <LCD_Command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1e4:	91 e2       	ldi	r25, 0x21	; 33
 1e6:	9a 95       	dec	r25
 1e8:	f1 f7       	brne	.-4      	; 0x1e6 <LCD_Init+0x30>
 1ea:	00 00       	nop
	_delay_us(100);
	LCD_Command(0x30);
 1ec:	80 e3       	ldi	r24, 0x30	; 48
 1ee:	0e 94 c8 00 	call	0x190	; 0x190 <LCD_Command>
	
	//Comandos para configurar EL LCD
	LCD_Command(LCD_INTERFACE_DATA1);
 1f2:	88 e3       	ldi	r24, 0x38	; 56
 1f4:	0e 94 c8 00 	call	0x190	; 0x190 <LCD_Command>
	LCD_Command(LCD_DISPLAY_ON_CURSOR_OF);
 1f8:	8c e0       	ldi	r24, 0x0C	; 12
 1fa:	0e 94 c8 00 	call	0x190	; 0x190 <LCD_Command>
	LCD_Command(LCD_CLEAR);
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	0e 94 c8 00 	call	0x190	; 0x190 <LCD_Command>
 204:	08 95       	ret

00000206 <LCD_Write_Char>:
	_delay_us(100);
}

void LCD_Write_Char(unsigned char character)
{
	PORTD |= (1 << RS_LCD);
 206:	9b b1       	in	r25, 0x0b	; 11
 208:	94 60       	ori	r25, 0x04	; 4
 20a:	9b b9       	out	0x0b, r25	; 11
	LCD_DATA = character;
 20c:	85 b9       	out	0x05, r24	; 5
	PORTD &= ~(1 << EN_LCD); //EN_LCD en 0
 20e:	8b b1       	in	r24, 0x0b	; 11
 210:	87 7f       	andi	r24, 0xF7	; 247
 212:	8b b9       	out	0x0b, r24	; 11
 214:	83 e0       	ldi	r24, 0x03	; 3
 216:	8a 95       	dec	r24
 218:	f1 f7       	brne	.-4      	; 0x216 <LCD_Write_Char+0x10>
 21a:	00 00       	nop
	_delay_us(10);
	PORTD |= (1 << EN_LCD); //EN_LCD en 1
 21c:	8b b1       	in	r24, 0x0b	; 11
 21e:	88 60       	ori	r24, 0x08	; 8
 220:	8b b9       	out	0x0b, r24	; 11
 222:	81 e2       	ldi	r24, 0x21	; 33
 224:	8a 95       	dec	r24
 226:	f1 f7       	brne	.-4      	; 0x224 <LCD_Write_Char+0x1e>
 228:	00 00       	nop
 22a:	08 95       	ret

0000022c <LCD_Write_String>:
	_delay_us(100);
}

void LCD_Write_String(unsigned char *str)
{
 22c:	cf 93       	push	r28
 22e:	df 93       	push	r29
 230:	ec 01       	movw	r28, r24
	while(*str)
 232:	03 c0       	rjmp	.+6      	; 0x23a <LCD_Write_String+0xe>
	{
		LCD_Write_Char(*str++);
 234:	21 96       	adiw	r28, 0x01	; 1
 236:	0e 94 03 01 	call	0x206	; 0x206 <LCD_Write_Char>
	_delay_us(100);
}

void LCD_Write_String(unsigned char *str)
{
	while(*str)
 23a:	88 81       	ld	r24, Y
 23c:	81 11       	cpse	r24, r1
 23e:	fa cf       	rjmp	.-12     	; 0x234 <LCD_Write_String+0x8>
	{
		LCD_Write_Char(*str++);
	}
}
 240:	df 91       	pop	r29
 242:	cf 91       	pop	r28
 244:	08 95       	ret

00000246 <LCD_SetCursor>:
void LCD_SetCursor(char col, char row)
 {
	char address;
	switch (row) {
 246:	62 30       	cpi	r22, 0x02	; 2
 248:	31 f0       	breq	.+12     	; 0x256 <LCD_SetCursor+0x10>
 24a:	63 30       	cpi	r22, 0x03	; 3
 24c:	31 f0       	breq	.+12     	; 0x25a <LCD_SetCursor+0x14>
 24e:	61 30       	cpi	r22, 0x01	; 1
 250:	31 f0       	breq	.+12     	; 0x25e <LCD_SetCursor+0x18>
		case 0: address = 0x00; break;  // Primera fila
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	05 c0       	rjmp	.+10     	; 0x260 <LCD_SetCursor+0x1a>
		case 1: address = 0x40; break;  // Segunda fila
		case 2: address = 0x14; break;  // Tercera fila 
 256:	94 e1       	ldi	r25, 0x14	; 20
 258:	03 c0       	rjmp	.+6      	; 0x260 <LCD_SetCursor+0x1a>
		case 3: address = 0x54; break;  // Cuarta fila 
 25a:	94 e5       	ldi	r25, 0x54	; 84
 25c:	01 c0       	rjmp	.+2      	; 0x260 <LCD_SetCursor+0x1a>
void LCD_SetCursor(char col, char row)
 {
	char address;
	switch (row) {
		case 0: address = 0x00; break;  // Primera fila
		case 1: address = 0x40; break;  // Segunda fila
 25e:	90 e4       	ldi	r25, 0x40	; 64
		case 2: address = 0x14; break;  // Tercera fila 
		case 3: address = 0x54; break;  // Cuarta fila 
		default: address = 0x00;
	}
	LCD_Command(LCD_CHANGE_LINE | (address + col));  // Comando "Set DDRAM Address"
 260:	89 0f       	add	r24, r25
 262:	80 68       	ori	r24, 0x80	; 128
 264:	0e 94 c8 00 	call	0x190	; 0x190 <LCD_Command>
 268:	08 95       	ret

0000026a <main>:

#define F_CPU 8000000UL


int main(void)
{
 26a:	cf 93       	push	r28
 26c:	df 93       	push	r29
 26e:	cd b7       	in	r28, 0x3d	; 61
 270:	de b7       	in	r29, 0x3e	; 62
 272:	2f 97       	sbiw	r28, 0x0f	; 15
 274:	0f b6       	in	r0, 0x3f	; 63
 276:	f8 94       	cli
 278:	de bf       	out	0x3e, r29	; 62
 27a:	0f be       	out	0x3f, r0	; 63
 27c:	cd bf       	out	0x3d, r28	; 61
	float distancia_basura = 0;
	unsigned char Datos_LCD[15];
    /* Replace with your application code */
	LCD_Init();
 27e:	0e 94 db 00 	call	0x1b6	; 0x1b6 <LCD_Init>
	UltraSonicInit();
 282:	0e 94 6f 01 	call	0x2de	; 0x2de <UltraSonicInit>
    while (1) 
    {
		//distancia_basura = (int)GetDistance();
		LCD_SetCursor(0,0);
 286:	60 e0       	ldi	r22, 0x00	; 0
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	0e 94 23 01 	call	0x246	; 0x246 <LCD_SetCursor>
		distancia_basura = GetDistance();
 28e:	0e 94 76 01 	call	0x2ec	; 0x2ec <GetDistance>
		dtostrf(distancia_basura, 5, 2, Datos_LCD);
 292:	8e 01       	movw	r16, r28
 294:	0f 5f       	subi	r16, 0xFF	; 255
 296:	1f 4f       	sbci	r17, 0xFF	; 255
 298:	22 e0       	ldi	r18, 0x02	; 2
 29a:	30 e0       	ldi	r19, 0x00	; 0
 29c:	45 e0       	ldi	r20, 0x05	; 5
 29e:	50 e0       	ldi	r21, 0x00	; 0
 2a0:	0e 94 9d 02 	call	0x53a	; 0x53a <dtostrf>
		LCD_Write_String(Datos_LCD);
 2a4:	c8 01       	movw	r24, r16
 2a6:	0e 94 16 01 	call	0x22c	; 0x22c <LCD_Write_String>
		LCD_Write_String(" cm");
 2aa:	80 e0       	ldi	r24, 0x00	; 0
 2ac:	91 e0       	ldi	r25, 0x01	; 1
 2ae:	0e 94 16 01 	call	0x22c	; 0x22c <LCD_Write_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2b2:	2f e7       	ldi	r18, 0x7F	; 127
 2b4:	8a e1       	ldi	r24, 0x1A	; 26
 2b6:	96 e0       	ldi	r25, 0x06	; 6
 2b8:	21 50       	subi	r18, 0x01	; 1
 2ba:	80 40       	sbci	r24, 0x00	; 0
 2bc:	90 40       	sbci	r25, 0x00	; 0
 2be:	e1 f7       	brne	.-8      	; 0x2b8 <main+0x4e>
 2c0:	00 c0       	rjmp	.+0      	; 0x2c2 <main+0x58>
 2c2:	00 00       	nop
		_delay_ms(2000);
		LCD_Command(LCD_CLEAR);
 2c4:	81 e0       	ldi	r24, 0x01	; 1
 2c6:	0e 94 c8 00 	call	0x190	; 0x190 <LCD_Command>
 2ca:	2f e7       	ldi	r18, 0x7F	; 127
 2cc:	8a e1       	ldi	r24, 0x1A	; 26
 2ce:	96 e0       	ldi	r25, 0x06	; 6
 2d0:	21 50       	subi	r18, 0x01	; 1
 2d2:	80 40       	sbci	r24, 0x00	; 0
 2d4:	90 40       	sbci	r25, 0x00	; 0
 2d6:	e1 f7       	brne	.-8      	; 0x2d0 <main+0x66>
 2d8:	00 c0       	rjmp	.+0      	; 0x2da <main+0x70>
 2da:	00 00       	nop
 2dc:	d4 cf       	rjmp	.-88     	; 0x286 <main+0x1c>

000002de <UltraSonicInit>:

#include "UltraSonicModule.h"

void UltraSonicInit()
{
	DDRD |= (1 << TRIGGER) | (0 << ECHO);
 2de:	8a b1       	in	r24, 0x0a	; 10
 2e0:	80 61       	ori	r24, 0x10	; 16
 2e2:	8a b9       	out	0x0a, r24	; 10
	DDRD |= (1 << 6);
 2e4:	8a b1       	in	r24, 0x0a	; 10
 2e6:	80 64       	ori	r24, 0x40	; 64
 2e8:	8a b9       	out	0x0a, r24	; 10
 2ea:	08 95       	ret

000002ec <GetDistance>:

float GetDistance()
{
	int counter = 0;
	float distance = 0;
	PORTD |= (1 << TRIGGER);
 2ec:	8b b1       	in	r24, 0x0b	; 11
 2ee:	80 61       	ori	r24, 0x10	; 16
 2f0:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2f2:	83 e0       	ldi	r24, 0x03	; 3
 2f4:	8a 95       	dec	r24
 2f6:	f1 f7       	brne	.-4      	; 0x2f4 <GetDistance+0x8>
 2f8:	00 00       	nop
	_delay_us(10);
	PORTD &= ~(1 << TRIGGER);
 2fa:	8b b1       	in	r24, 0x0b	; 11
 2fc:	8f 7e       	andi	r24, 0xEF	; 239
 2fe:	8b b9       	out	0x0b, r24	; 11
	// Esperar flanco de subida en Echo
	while (!(PIND & (1 << ECHO)));
 300:	4d 9b       	sbis	0x09, 5	; 9
 302:	fe cf       	rjmp	.-4      	; 0x300 <GetDistance+0x14>
 304:	60 e0       	ldi	r22, 0x00	; 0
 306:	70 e0       	ldi	r23, 0x00	; 0
 308:	06 c0       	rjmp	.+12     	; 0x316 <GetDistance+0x2a>
	
	// Medir duraci?n del pulso (en us)
	while (PIND & (1 << ECHO)) {
		counter += 1;
 30a:	6f 5f       	subi	r22, 0xFF	; 255
 30c:	7f 4f       	sbci	r23, 0xFF	; 255
		PORTD |= (1 << 6);
 30e:	8b b1       	in	r24, 0x0b	; 11
 310:	80 64       	ori	r24, 0x40	; 64
 312:	8b b9       	out	0x0b, r24	; 11
 314:	00 00       	nop
	PORTD &= ~(1 << TRIGGER);
	// Esperar flanco de subida en Echo
	while (!(PIND & (1 << ECHO)));
	
	// Medir duraci?n del pulso (en us)
	while (PIND & (1 << ECHO)) {
 316:	4d 99       	sbic	0x09, 5	; 9
 318:	f8 cf       	rjmp	.-16     	; 0x30a <GetDistance+0x1e>
		counter += 1;
		PORTD |= (1 << 6);
		_delay_us(1);  
	}
	PORTD &= ~(1 << 6);
 31a:	8b b1       	in	r24, 0x0b	; 11
 31c:	8f 7b       	andi	r24, 0xBF	; 191
 31e:	8b b9       	out	0x0b, r24	; 11
	// Calcular distancia (en cm)
	distance = (float)counter / 58.0;  // F?rmula: (us / 58) = cm
 320:	07 2e       	mov	r0, r23
 322:	00 0c       	add	r0, r0
 324:	88 0b       	sbc	r24, r24
 326:	99 0b       	sbc	r25, r25
 328:	0e 94 11 02 	call	0x422	; 0x422 <__floatsisf>
 32c:	20 e0       	ldi	r18, 0x00	; 0
 32e:	30 e0       	ldi	r19, 0x00	; 0
 330:	48 e6       	ldi	r20, 0x68	; 104
 332:	52 e4       	ldi	r21, 0x42	; 66
 334:	0e 94 9d 01 	call	0x33a	; 0x33a <__divsf3>
	
	return distance;
 338:	08 95       	ret

0000033a <__divsf3>:
 33a:	0e 94 b1 01 	call	0x362	; 0x362 <__divsf3x>
 33e:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__fp_round>
 342:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <__fp_pscB>
 346:	58 f0       	brcs	.+22     	; 0x35e <__divsf3+0x24>
 348:	0e 94 55 02 	call	0x4aa	; 0x4aa <__fp_pscA>
 34c:	40 f0       	brcs	.+16     	; 0x35e <__divsf3+0x24>
 34e:	29 f4       	brne	.+10     	; 0x35a <__divsf3+0x20>
 350:	5f 3f       	cpi	r21, 0xFF	; 255
 352:	29 f0       	breq	.+10     	; 0x35e <__divsf3+0x24>
 354:	0c 94 4c 02 	jmp	0x498	; 0x498 <__fp_inf>
 358:	51 11       	cpse	r21, r1
 35a:	0c 94 97 02 	jmp	0x52e	; 0x52e <__fp_szero>
 35e:	0c 94 52 02 	jmp	0x4a4	; 0x4a4 <__fp_nan>

00000362 <__divsf3x>:
 362:	0e 94 74 02 	call	0x4e8	; 0x4e8 <__fp_split3>
 366:	68 f3       	brcs	.-38     	; 0x342 <__divsf3+0x8>

00000368 <__divsf3_pse>:
 368:	99 23       	and	r25, r25
 36a:	b1 f3       	breq	.-20     	; 0x358 <__divsf3+0x1e>
 36c:	55 23       	and	r21, r21
 36e:	91 f3       	breq	.-28     	; 0x354 <__divsf3+0x1a>
 370:	95 1b       	sub	r25, r21
 372:	55 0b       	sbc	r21, r21
 374:	bb 27       	eor	r27, r27
 376:	aa 27       	eor	r26, r26
 378:	62 17       	cp	r22, r18
 37a:	73 07       	cpc	r23, r19
 37c:	84 07       	cpc	r24, r20
 37e:	38 f0       	brcs	.+14     	; 0x38e <__divsf3_pse+0x26>
 380:	9f 5f       	subi	r25, 0xFF	; 255
 382:	5f 4f       	sbci	r21, 0xFF	; 255
 384:	22 0f       	add	r18, r18
 386:	33 1f       	adc	r19, r19
 388:	44 1f       	adc	r20, r20
 38a:	aa 1f       	adc	r26, r26
 38c:	a9 f3       	breq	.-22     	; 0x378 <__divsf3_pse+0x10>
 38e:	35 d0       	rcall	.+106    	; 0x3fa <__divsf3_pse+0x92>
 390:	0e 2e       	mov	r0, r30
 392:	3a f0       	brmi	.+14     	; 0x3a2 <__divsf3_pse+0x3a>
 394:	e0 e8       	ldi	r30, 0x80	; 128
 396:	32 d0       	rcall	.+100    	; 0x3fc <__divsf3_pse+0x94>
 398:	91 50       	subi	r25, 0x01	; 1
 39a:	50 40       	sbci	r21, 0x00	; 0
 39c:	e6 95       	lsr	r30
 39e:	00 1c       	adc	r0, r0
 3a0:	ca f7       	brpl	.-14     	; 0x394 <__divsf3_pse+0x2c>
 3a2:	2b d0       	rcall	.+86     	; 0x3fa <__divsf3_pse+0x92>
 3a4:	fe 2f       	mov	r31, r30
 3a6:	29 d0       	rcall	.+82     	; 0x3fa <__divsf3_pse+0x92>
 3a8:	66 0f       	add	r22, r22
 3aa:	77 1f       	adc	r23, r23
 3ac:	88 1f       	adc	r24, r24
 3ae:	bb 1f       	adc	r27, r27
 3b0:	26 17       	cp	r18, r22
 3b2:	37 07       	cpc	r19, r23
 3b4:	48 07       	cpc	r20, r24
 3b6:	ab 07       	cpc	r26, r27
 3b8:	b0 e8       	ldi	r27, 0x80	; 128
 3ba:	09 f0       	breq	.+2      	; 0x3be <__divsf3_pse+0x56>
 3bc:	bb 0b       	sbc	r27, r27
 3be:	80 2d       	mov	r24, r0
 3c0:	bf 01       	movw	r22, r30
 3c2:	ff 27       	eor	r31, r31
 3c4:	93 58       	subi	r25, 0x83	; 131
 3c6:	5f 4f       	sbci	r21, 0xFF	; 255
 3c8:	3a f0       	brmi	.+14     	; 0x3d8 <__divsf3_pse+0x70>
 3ca:	9e 3f       	cpi	r25, 0xFE	; 254
 3cc:	51 05       	cpc	r21, r1
 3ce:	78 f0       	brcs	.+30     	; 0x3ee <__divsf3_pse+0x86>
 3d0:	0c 94 4c 02 	jmp	0x498	; 0x498 <__fp_inf>
 3d4:	0c 94 97 02 	jmp	0x52e	; 0x52e <__fp_szero>
 3d8:	5f 3f       	cpi	r21, 0xFF	; 255
 3da:	e4 f3       	brlt	.-8      	; 0x3d4 <__divsf3_pse+0x6c>
 3dc:	98 3e       	cpi	r25, 0xE8	; 232
 3de:	d4 f3       	brlt	.-12     	; 0x3d4 <__divsf3_pse+0x6c>
 3e0:	86 95       	lsr	r24
 3e2:	77 95       	ror	r23
 3e4:	67 95       	ror	r22
 3e6:	b7 95       	ror	r27
 3e8:	f7 95       	ror	r31
 3ea:	9f 5f       	subi	r25, 0xFF	; 255
 3ec:	c9 f7       	brne	.-14     	; 0x3e0 <__divsf3_pse+0x78>
 3ee:	88 0f       	add	r24, r24
 3f0:	91 1d       	adc	r25, r1
 3f2:	96 95       	lsr	r25
 3f4:	87 95       	ror	r24
 3f6:	97 f9       	bld	r25, 7
 3f8:	08 95       	ret
 3fa:	e1 e0       	ldi	r30, 0x01	; 1
 3fc:	66 0f       	add	r22, r22
 3fe:	77 1f       	adc	r23, r23
 400:	88 1f       	adc	r24, r24
 402:	bb 1f       	adc	r27, r27
 404:	62 17       	cp	r22, r18
 406:	73 07       	cpc	r23, r19
 408:	84 07       	cpc	r24, r20
 40a:	ba 07       	cpc	r27, r26
 40c:	20 f0       	brcs	.+8      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 40e:	62 1b       	sub	r22, r18
 410:	73 0b       	sbc	r23, r19
 412:	84 0b       	sbc	r24, r20
 414:	ba 0b       	sbc	r27, r26
 416:	ee 1f       	adc	r30, r30
 418:	88 f7       	brcc	.-30     	; 0x3fc <__divsf3_pse+0x94>
 41a:	e0 95       	com	r30
 41c:	08 95       	ret

0000041e <__floatunsisf>:
 41e:	e8 94       	clt
 420:	09 c0       	rjmp	.+18     	; 0x434 <__floatsisf+0x12>

00000422 <__floatsisf>:
 422:	97 fb       	bst	r25, 7
 424:	3e f4       	brtc	.+14     	; 0x434 <__floatsisf+0x12>
 426:	90 95       	com	r25
 428:	80 95       	com	r24
 42a:	70 95       	com	r23
 42c:	61 95       	neg	r22
 42e:	7f 4f       	sbci	r23, 0xFF	; 255
 430:	8f 4f       	sbci	r24, 0xFF	; 255
 432:	9f 4f       	sbci	r25, 0xFF	; 255
 434:	99 23       	and	r25, r25
 436:	a9 f0       	breq	.+42     	; 0x462 <__floatsisf+0x40>
 438:	f9 2f       	mov	r31, r25
 43a:	96 e9       	ldi	r25, 0x96	; 150
 43c:	bb 27       	eor	r27, r27
 43e:	93 95       	inc	r25
 440:	f6 95       	lsr	r31
 442:	87 95       	ror	r24
 444:	77 95       	ror	r23
 446:	67 95       	ror	r22
 448:	b7 95       	ror	r27
 44a:	f1 11       	cpse	r31, r1
 44c:	f8 cf       	rjmp	.-16     	; 0x43e <__floatsisf+0x1c>
 44e:	fa f4       	brpl	.+62     	; 0x48e <__floatsisf+0x6c>
 450:	bb 0f       	add	r27, r27
 452:	11 f4       	brne	.+4      	; 0x458 <__floatsisf+0x36>
 454:	60 ff       	sbrs	r22, 0
 456:	1b c0       	rjmp	.+54     	; 0x48e <__floatsisf+0x6c>
 458:	6f 5f       	subi	r22, 0xFF	; 255
 45a:	7f 4f       	sbci	r23, 0xFF	; 255
 45c:	8f 4f       	sbci	r24, 0xFF	; 255
 45e:	9f 4f       	sbci	r25, 0xFF	; 255
 460:	16 c0       	rjmp	.+44     	; 0x48e <__floatsisf+0x6c>
 462:	88 23       	and	r24, r24
 464:	11 f0       	breq	.+4      	; 0x46a <__floatsisf+0x48>
 466:	96 e9       	ldi	r25, 0x96	; 150
 468:	11 c0       	rjmp	.+34     	; 0x48c <__floatsisf+0x6a>
 46a:	77 23       	and	r23, r23
 46c:	21 f0       	breq	.+8      	; 0x476 <__floatsisf+0x54>
 46e:	9e e8       	ldi	r25, 0x8E	; 142
 470:	87 2f       	mov	r24, r23
 472:	76 2f       	mov	r23, r22
 474:	05 c0       	rjmp	.+10     	; 0x480 <__floatsisf+0x5e>
 476:	66 23       	and	r22, r22
 478:	71 f0       	breq	.+28     	; 0x496 <__floatsisf+0x74>
 47a:	96 e8       	ldi	r25, 0x86	; 134
 47c:	86 2f       	mov	r24, r22
 47e:	70 e0       	ldi	r23, 0x00	; 0
 480:	60 e0       	ldi	r22, 0x00	; 0
 482:	2a f0       	brmi	.+10     	; 0x48e <__floatsisf+0x6c>
 484:	9a 95       	dec	r25
 486:	66 0f       	add	r22, r22
 488:	77 1f       	adc	r23, r23
 48a:	88 1f       	adc	r24, r24
 48c:	da f7       	brpl	.-10     	; 0x484 <__floatsisf+0x62>
 48e:	88 0f       	add	r24, r24
 490:	96 95       	lsr	r25
 492:	87 95       	ror	r24
 494:	97 f9       	bld	r25, 7
 496:	08 95       	ret

00000498 <__fp_inf>:
 498:	97 f9       	bld	r25, 7
 49a:	9f 67       	ori	r25, 0x7F	; 127
 49c:	80 e8       	ldi	r24, 0x80	; 128
 49e:	70 e0       	ldi	r23, 0x00	; 0
 4a0:	60 e0       	ldi	r22, 0x00	; 0
 4a2:	08 95       	ret

000004a4 <__fp_nan>:
 4a4:	9f ef       	ldi	r25, 0xFF	; 255
 4a6:	80 ec       	ldi	r24, 0xC0	; 192
 4a8:	08 95       	ret

000004aa <__fp_pscA>:
 4aa:	00 24       	eor	r0, r0
 4ac:	0a 94       	dec	r0
 4ae:	16 16       	cp	r1, r22
 4b0:	17 06       	cpc	r1, r23
 4b2:	18 06       	cpc	r1, r24
 4b4:	09 06       	cpc	r0, r25
 4b6:	08 95       	ret

000004b8 <__fp_pscB>:
 4b8:	00 24       	eor	r0, r0
 4ba:	0a 94       	dec	r0
 4bc:	12 16       	cp	r1, r18
 4be:	13 06       	cpc	r1, r19
 4c0:	14 06       	cpc	r1, r20
 4c2:	05 06       	cpc	r0, r21
 4c4:	08 95       	ret

000004c6 <__fp_round>:
 4c6:	09 2e       	mov	r0, r25
 4c8:	03 94       	inc	r0
 4ca:	00 0c       	add	r0, r0
 4cc:	11 f4       	brne	.+4      	; 0x4d2 <__fp_round+0xc>
 4ce:	88 23       	and	r24, r24
 4d0:	52 f0       	brmi	.+20     	; 0x4e6 <__fp_round+0x20>
 4d2:	bb 0f       	add	r27, r27
 4d4:	40 f4       	brcc	.+16     	; 0x4e6 <__fp_round+0x20>
 4d6:	bf 2b       	or	r27, r31
 4d8:	11 f4       	brne	.+4      	; 0x4de <__fp_round+0x18>
 4da:	60 ff       	sbrs	r22, 0
 4dc:	04 c0       	rjmp	.+8      	; 0x4e6 <__fp_round+0x20>
 4de:	6f 5f       	subi	r22, 0xFF	; 255
 4e0:	7f 4f       	sbci	r23, 0xFF	; 255
 4e2:	8f 4f       	sbci	r24, 0xFF	; 255
 4e4:	9f 4f       	sbci	r25, 0xFF	; 255
 4e6:	08 95       	ret

000004e8 <__fp_split3>:
 4e8:	57 fd       	sbrc	r21, 7
 4ea:	90 58       	subi	r25, 0x80	; 128
 4ec:	44 0f       	add	r20, r20
 4ee:	55 1f       	adc	r21, r21
 4f0:	59 f0       	breq	.+22     	; 0x508 <__fp_splitA+0x10>
 4f2:	5f 3f       	cpi	r21, 0xFF	; 255
 4f4:	71 f0       	breq	.+28     	; 0x512 <__fp_splitA+0x1a>
 4f6:	47 95       	ror	r20

000004f8 <__fp_splitA>:
 4f8:	88 0f       	add	r24, r24
 4fa:	97 fb       	bst	r25, 7
 4fc:	99 1f       	adc	r25, r25
 4fe:	61 f0       	breq	.+24     	; 0x518 <__fp_splitA+0x20>
 500:	9f 3f       	cpi	r25, 0xFF	; 255
 502:	79 f0       	breq	.+30     	; 0x522 <__fp_splitA+0x2a>
 504:	87 95       	ror	r24
 506:	08 95       	ret
 508:	12 16       	cp	r1, r18
 50a:	13 06       	cpc	r1, r19
 50c:	14 06       	cpc	r1, r20
 50e:	55 1f       	adc	r21, r21
 510:	f2 cf       	rjmp	.-28     	; 0x4f6 <__fp_split3+0xe>
 512:	46 95       	lsr	r20
 514:	f1 df       	rcall	.-30     	; 0x4f8 <__fp_splitA>
 516:	08 c0       	rjmp	.+16     	; 0x528 <__fp_splitA+0x30>
 518:	16 16       	cp	r1, r22
 51a:	17 06       	cpc	r1, r23
 51c:	18 06       	cpc	r1, r24
 51e:	99 1f       	adc	r25, r25
 520:	f1 cf       	rjmp	.-30     	; 0x504 <__fp_splitA+0xc>
 522:	86 95       	lsr	r24
 524:	71 05       	cpc	r23, r1
 526:	61 05       	cpc	r22, r1
 528:	08 94       	sec
 52a:	08 95       	ret

0000052c <__fp_zero>:
 52c:	e8 94       	clt

0000052e <__fp_szero>:
 52e:	bb 27       	eor	r27, r27
 530:	66 27       	eor	r22, r22
 532:	77 27       	eor	r23, r23
 534:	cb 01       	movw	r24, r22
 536:	97 f9       	bld	r25, 7
 538:	08 95       	ret

0000053a <dtostrf>:
 53a:	ef 92       	push	r14
 53c:	0f 93       	push	r16
 53e:	1f 93       	push	r17
 540:	cf 93       	push	r28
 542:	df 93       	push	r29
 544:	e8 01       	movw	r28, r16
 546:	47 fd       	sbrc	r20, 7
 548:	02 c0       	rjmp	.+4      	; 0x54e <dtostrf+0x14>
 54a:	34 e0       	ldi	r19, 0x04	; 4
 54c:	01 c0       	rjmp	.+2      	; 0x550 <dtostrf+0x16>
 54e:	34 e1       	ldi	r19, 0x14	; 20
 550:	04 2e       	mov	r0, r20
 552:	00 0c       	add	r0, r0
 554:	55 0b       	sbc	r21, r21
 556:	57 ff       	sbrs	r21, 7
 558:	03 c0       	rjmp	.+6      	; 0x560 <dtostrf+0x26>
 55a:	51 95       	neg	r21
 55c:	41 95       	neg	r20
 55e:	51 09       	sbc	r21, r1
 560:	e3 2e       	mov	r14, r19
 562:	02 2f       	mov	r16, r18
 564:	24 2f       	mov	r18, r20
 566:	ae 01       	movw	r20, r28
 568:	0e 94 bd 02 	call	0x57a	; 0x57a <dtoa_prf>
 56c:	ce 01       	movw	r24, r28
 56e:	df 91       	pop	r29
 570:	cf 91       	pop	r28
 572:	1f 91       	pop	r17
 574:	0f 91       	pop	r16
 576:	ef 90       	pop	r14
 578:	08 95       	ret

0000057a <dtoa_prf>:
 57a:	a9 e0       	ldi	r26, 0x09	; 9
 57c:	b0 e0       	ldi	r27, 0x00	; 0
 57e:	e3 ec       	ldi	r30, 0xC3	; 195
 580:	f2 e0       	ldi	r31, 0x02	; 2
 582:	0c 94 f5 04 	jmp	0x9ea	; 0x9ea <__prologue_saves__+0xc>
 586:	6a 01       	movw	r12, r20
 588:	12 2f       	mov	r17, r18
 58a:	b0 2e       	mov	r11, r16
 58c:	2b e3       	ldi	r18, 0x3B	; 59
 58e:	20 17       	cp	r18, r16
 590:	20 f0       	brcs	.+8      	; 0x59a <dtoa_prf+0x20>
 592:	ff 24       	eor	r15, r15
 594:	f3 94       	inc	r15
 596:	f0 0e       	add	r15, r16
 598:	02 c0       	rjmp	.+4      	; 0x59e <dtoa_prf+0x24>
 59a:	2c e3       	ldi	r18, 0x3C	; 60
 59c:	f2 2e       	mov	r15, r18
 59e:	0f 2d       	mov	r16, r15
 5a0:	27 e0       	ldi	r18, 0x07	; 7
 5a2:	ae 01       	movw	r20, r28
 5a4:	4f 5f       	subi	r20, 0xFF	; 255
 5a6:	5f 4f       	sbci	r21, 0xFF	; 255
 5a8:	0e 94 17 04 	call	0x82e	; 0x82e <__ftoa_engine>
 5ac:	bc 01       	movw	r22, r24
 5ae:	49 81       	ldd	r20, Y+1	; 0x01
 5b0:	84 2f       	mov	r24, r20
 5b2:	89 70       	andi	r24, 0x09	; 9
 5b4:	81 30       	cpi	r24, 0x01	; 1
 5b6:	31 f0       	breq	.+12     	; 0x5c4 <dtoa_prf+0x4a>
 5b8:	e1 fc       	sbrc	r14, 1
 5ba:	06 c0       	rjmp	.+12     	; 0x5c8 <dtoa_prf+0x4e>
 5bc:	e0 fe       	sbrs	r14, 0
 5be:	06 c0       	rjmp	.+12     	; 0x5cc <dtoa_prf+0x52>
 5c0:	90 e2       	ldi	r25, 0x20	; 32
 5c2:	05 c0       	rjmp	.+10     	; 0x5ce <dtoa_prf+0x54>
 5c4:	9d e2       	ldi	r25, 0x2D	; 45
 5c6:	03 c0       	rjmp	.+6      	; 0x5ce <dtoa_prf+0x54>
 5c8:	9b e2       	ldi	r25, 0x2B	; 43
 5ca:	01 c0       	rjmp	.+2      	; 0x5ce <dtoa_prf+0x54>
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	5e 2d       	mov	r21, r14
 5d0:	50 71       	andi	r21, 0x10	; 16
 5d2:	43 ff       	sbrs	r20, 3
 5d4:	3c c0       	rjmp	.+120    	; 0x64e <dtoa_prf+0xd4>
 5d6:	91 11       	cpse	r25, r1
 5d8:	02 c0       	rjmp	.+4      	; 0x5de <dtoa_prf+0x64>
 5da:	83 e0       	ldi	r24, 0x03	; 3
 5dc:	01 c0       	rjmp	.+2      	; 0x5e0 <dtoa_prf+0x66>
 5de:	84 e0       	ldi	r24, 0x04	; 4
 5e0:	81 17       	cp	r24, r17
 5e2:	18 f4       	brcc	.+6      	; 0x5ea <dtoa_prf+0x70>
 5e4:	21 2f       	mov	r18, r17
 5e6:	28 1b       	sub	r18, r24
 5e8:	01 c0       	rjmp	.+2      	; 0x5ec <dtoa_prf+0x72>
 5ea:	20 e0       	ldi	r18, 0x00	; 0
 5ec:	51 11       	cpse	r21, r1
 5ee:	0b c0       	rjmp	.+22     	; 0x606 <dtoa_prf+0x8c>
 5f0:	f6 01       	movw	r30, r12
 5f2:	82 2f       	mov	r24, r18
 5f4:	30 e2       	ldi	r19, 0x20	; 32
 5f6:	88 23       	and	r24, r24
 5f8:	19 f0       	breq	.+6      	; 0x600 <dtoa_prf+0x86>
 5fa:	31 93       	st	Z+, r19
 5fc:	81 50       	subi	r24, 0x01	; 1
 5fe:	fb cf       	rjmp	.-10     	; 0x5f6 <dtoa_prf+0x7c>
 600:	c2 0e       	add	r12, r18
 602:	d1 1c       	adc	r13, r1
 604:	20 e0       	ldi	r18, 0x00	; 0
 606:	99 23       	and	r25, r25
 608:	29 f0       	breq	.+10     	; 0x614 <dtoa_prf+0x9a>
 60a:	d6 01       	movw	r26, r12
 60c:	9c 93       	st	X, r25
 60e:	f6 01       	movw	r30, r12
 610:	31 96       	adiw	r30, 0x01	; 1
 612:	6f 01       	movw	r12, r30
 614:	c6 01       	movw	r24, r12
 616:	03 96       	adiw	r24, 0x03	; 3
 618:	e2 fe       	sbrs	r14, 2
 61a:	0a c0       	rjmp	.+20     	; 0x630 <dtoa_prf+0xb6>
 61c:	3e e4       	ldi	r19, 0x4E	; 78
 61e:	d6 01       	movw	r26, r12
 620:	3c 93       	st	X, r19
 622:	41 e4       	ldi	r20, 0x41	; 65
 624:	11 96       	adiw	r26, 0x01	; 1
 626:	4c 93       	st	X, r20
 628:	11 97       	sbiw	r26, 0x01	; 1
 62a:	12 96       	adiw	r26, 0x02	; 2
 62c:	3c 93       	st	X, r19
 62e:	06 c0       	rjmp	.+12     	; 0x63c <dtoa_prf+0xc2>
 630:	3e e6       	ldi	r19, 0x6E	; 110
 632:	f6 01       	movw	r30, r12
 634:	30 83       	st	Z, r19
 636:	41 e6       	ldi	r20, 0x61	; 97
 638:	41 83       	std	Z+1, r20	; 0x01
 63a:	32 83       	std	Z+2, r19	; 0x02
 63c:	fc 01       	movw	r30, r24
 63e:	32 2f       	mov	r19, r18
 640:	40 e2       	ldi	r20, 0x20	; 32
 642:	33 23       	and	r19, r19
 644:	09 f4       	brne	.+2      	; 0x648 <dtoa_prf+0xce>
 646:	42 c0       	rjmp	.+132    	; 0x6cc <dtoa_prf+0x152>
 648:	41 93       	st	Z+, r20
 64a:	31 50       	subi	r19, 0x01	; 1
 64c:	fa cf       	rjmp	.-12     	; 0x642 <dtoa_prf+0xc8>
 64e:	42 ff       	sbrs	r20, 2
 650:	44 c0       	rjmp	.+136    	; 0x6da <dtoa_prf+0x160>
 652:	91 11       	cpse	r25, r1
 654:	02 c0       	rjmp	.+4      	; 0x65a <dtoa_prf+0xe0>
 656:	83 e0       	ldi	r24, 0x03	; 3
 658:	01 c0       	rjmp	.+2      	; 0x65c <dtoa_prf+0xe2>
 65a:	84 e0       	ldi	r24, 0x04	; 4
 65c:	81 17       	cp	r24, r17
 65e:	18 f4       	brcc	.+6      	; 0x666 <dtoa_prf+0xec>
 660:	21 2f       	mov	r18, r17
 662:	28 1b       	sub	r18, r24
 664:	01 c0       	rjmp	.+2      	; 0x668 <dtoa_prf+0xee>
 666:	20 e0       	ldi	r18, 0x00	; 0
 668:	51 11       	cpse	r21, r1
 66a:	0b c0       	rjmp	.+22     	; 0x682 <dtoa_prf+0x108>
 66c:	f6 01       	movw	r30, r12
 66e:	82 2f       	mov	r24, r18
 670:	30 e2       	ldi	r19, 0x20	; 32
 672:	88 23       	and	r24, r24
 674:	19 f0       	breq	.+6      	; 0x67c <dtoa_prf+0x102>
 676:	31 93       	st	Z+, r19
 678:	81 50       	subi	r24, 0x01	; 1
 67a:	fb cf       	rjmp	.-10     	; 0x672 <dtoa_prf+0xf8>
 67c:	c2 0e       	add	r12, r18
 67e:	d1 1c       	adc	r13, r1
 680:	20 e0       	ldi	r18, 0x00	; 0
 682:	99 23       	and	r25, r25
 684:	29 f0       	breq	.+10     	; 0x690 <dtoa_prf+0x116>
 686:	d6 01       	movw	r26, r12
 688:	9c 93       	st	X, r25
 68a:	f6 01       	movw	r30, r12
 68c:	31 96       	adiw	r30, 0x01	; 1
 68e:	6f 01       	movw	r12, r30
 690:	c6 01       	movw	r24, r12
 692:	03 96       	adiw	r24, 0x03	; 3
 694:	e2 fe       	sbrs	r14, 2
 696:	0b c0       	rjmp	.+22     	; 0x6ae <dtoa_prf+0x134>
 698:	39 e4       	ldi	r19, 0x49	; 73
 69a:	d6 01       	movw	r26, r12
 69c:	3c 93       	st	X, r19
 69e:	3e e4       	ldi	r19, 0x4E	; 78
 6a0:	11 96       	adiw	r26, 0x01	; 1
 6a2:	3c 93       	st	X, r19
 6a4:	11 97       	sbiw	r26, 0x01	; 1
 6a6:	36 e4       	ldi	r19, 0x46	; 70
 6a8:	12 96       	adiw	r26, 0x02	; 2
 6aa:	3c 93       	st	X, r19
 6ac:	07 c0       	rjmp	.+14     	; 0x6bc <dtoa_prf+0x142>
 6ae:	39 e6       	ldi	r19, 0x69	; 105
 6b0:	f6 01       	movw	r30, r12
 6b2:	30 83       	st	Z, r19
 6b4:	3e e6       	ldi	r19, 0x6E	; 110
 6b6:	31 83       	std	Z+1, r19	; 0x01
 6b8:	36 e6       	ldi	r19, 0x66	; 102
 6ba:	32 83       	std	Z+2, r19	; 0x02
 6bc:	fc 01       	movw	r30, r24
 6be:	32 2f       	mov	r19, r18
 6c0:	40 e2       	ldi	r20, 0x20	; 32
 6c2:	33 23       	and	r19, r19
 6c4:	19 f0       	breq	.+6      	; 0x6cc <dtoa_prf+0x152>
 6c6:	41 93       	st	Z+, r20
 6c8:	31 50       	subi	r19, 0x01	; 1
 6ca:	fb cf       	rjmp	.-10     	; 0x6c2 <dtoa_prf+0x148>
 6cc:	fc 01       	movw	r30, r24
 6ce:	e2 0f       	add	r30, r18
 6d0:	f1 1d       	adc	r31, r1
 6d2:	10 82       	st	Z, r1
 6d4:	8e ef       	ldi	r24, 0xFE	; 254
 6d6:	9f ef       	ldi	r25, 0xFF	; 255
 6d8:	a6 c0       	rjmp	.+332    	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 6da:	21 e0       	ldi	r18, 0x01	; 1
 6dc:	30 e0       	ldi	r19, 0x00	; 0
 6de:	91 11       	cpse	r25, r1
 6e0:	02 c0       	rjmp	.+4      	; 0x6e6 <dtoa_prf+0x16c>
 6e2:	20 e0       	ldi	r18, 0x00	; 0
 6e4:	30 e0       	ldi	r19, 0x00	; 0
 6e6:	16 16       	cp	r1, r22
 6e8:	17 06       	cpc	r1, r23
 6ea:	1c f4       	brge	.+6      	; 0x6f2 <dtoa_prf+0x178>
 6ec:	fb 01       	movw	r30, r22
 6ee:	31 96       	adiw	r30, 0x01	; 1
 6f0:	02 c0       	rjmp	.+4      	; 0x6f6 <dtoa_prf+0x17c>
 6f2:	e1 e0       	ldi	r30, 0x01	; 1
 6f4:	f0 e0       	ldi	r31, 0x00	; 0
 6f6:	2e 0f       	add	r18, r30
 6f8:	3f 1f       	adc	r19, r31
 6fa:	bb 20       	and	r11, r11
 6fc:	21 f0       	breq	.+8      	; 0x706 <dtoa_prf+0x18c>
 6fe:	eb 2d       	mov	r30, r11
 700:	f0 e0       	ldi	r31, 0x00	; 0
 702:	31 96       	adiw	r30, 0x01	; 1
 704:	02 c0       	rjmp	.+4      	; 0x70a <dtoa_prf+0x190>
 706:	e0 e0       	ldi	r30, 0x00	; 0
 708:	f0 e0       	ldi	r31, 0x00	; 0
 70a:	2e 0f       	add	r18, r30
 70c:	3f 1f       	adc	r19, r31
 70e:	e1 2f       	mov	r30, r17
 710:	f0 e0       	ldi	r31, 0x00	; 0
 712:	2e 17       	cp	r18, r30
 714:	3f 07       	cpc	r19, r31
 716:	1c f4       	brge	.+6      	; 0x71e <dtoa_prf+0x1a4>
 718:	12 1b       	sub	r17, r18
 71a:	21 2f       	mov	r18, r17
 71c:	01 c0       	rjmp	.+2      	; 0x720 <dtoa_prf+0x1a6>
 71e:	20 e0       	ldi	r18, 0x00	; 0
 720:	8e 2d       	mov	r24, r14
 722:	88 71       	andi	r24, 0x18	; 24
 724:	59 f4       	brne	.+22     	; 0x73c <dtoa_prf+0x1c2>
 726:	f6 01       	movw	r30, r12
 728:	82 2f       	mov	r24, r18
 72a:	30 e2       	ldi	r19, 0x20	; 32
 72c:	88 23       	and	r24, r24
 72e:	19 f0       	breq	.+6      	; 0x736 <dtoa_prf+0x1bc>
 730:	31 93       	st	Z+, r19
 732:	81 50       	subi	r24, 0x01	; 1
 734:	fb cf       	rjmp	.-10     	; 0x72c <dtoa_prf+0x1b2>
 736:	c2 0e       	add	r12, r18
 738:	d1 1c       	adc	r13, r1
 73a:	20 e0       	ldi	r18, 0x00	; 0
 73c:	99 23       	and	r25, r25
 73e:	29 f0       	breq	.+10     	; 0x74a <dtoa_prf+0x1d0>
 740:	d6 01       	movw	r26, r12
 742:	9c 93       	st	X, r25
 744:	f6 01       	movw	r30, r12
 746:	31 96       	adiw	r30, 0x01	; 1
 748:	6f 01       	movw	r12, r30
 74a:	51 11       	cpse	r21, r1
 74c:	0b c0       	rjmp	.+22     	; 0x764 <dtoa_prf+0x1ea>
 74e:	f6 01       	movw	r30, r12
 750:	82 2f       	mov	r24, r18
 752:	90 e3       	ldi	r25, 0x30	; 48
 754:	88 23       	and	r24, r24
 756:	19 f0       	breq	.+6      	; 0x75e <dtoa_prf+0x1e4>
 758:	91 93       	st	Z+, r25
 75a:	81 50       	subi	r24, 0x01	; 1
 75c:	fb cf       	rjmp	.-10     	; 0x754 <dtoa_prf+0x1da>
 75e:	c2 0e       	add	r12, r18
 760:	d1 1c       	adc	r13, r1
 762:	20 e0       	ldi	r18, 0x00	; 0
 764:	0f 2d       	mov	r16, r15
 766:	06 0f       	add	r16, r22
 768:	9a 81       	ldd	r25, Y+2	; 0x02
 76a:	34 2f       	mov	r19, r20
 76c:	30 71       	andi	r19, 0x10	; 16
 76e:	44 ff       	sbrs	r20, 4
 770:	03 c0       	rjmp	.+6      	; 0x778 <dtoa_prf+0x1fe>
 772:	91 33       	cpi	r25, 0x31	; 49
 774:	09 f4       	brne	.+2      	; 0x778 <dtoa_prf+0x1fe>
 776:	01 50       	subi	r16, 0x01	; 1
 778:	10 16       	cp	r1, r16
 77a:	24 f4       	brge	.+8      	; 0x784 <dtoa_prf+0x20a>
 77c:	09 30       	cpi	r16, 0x09	; 9
 77e:	18 f0       	brcs	.+6      	; 0x786 <dtoa_prf+0x20c>
 780:	08 e0       	ldi	r16, 0x08	; 8
 782:	01 c0       	rjmp	.+2      	; 0x786 <dtoa_prf+0x20c>
 784:	01 e0       	ldi	r16, 0x01	; 1
 786:	ab 01       	movw	r20, r22
 788:	77 ff       	sbrs	r23, 7
 78a:	02 c0       	rjmp	.+4      	; 0x790 <dtoa_prf+0x216>
 78c:	40 e0       	ldi	r20, 0x00	; 0
 78e:	50 e0       	ldi	r21, 0x00	; 0
 790:	fb 01       	movw	r30, r22
 792:	e4 1b       	sub	r30, r20
 794:	f5 0b       	sbc	r31, r21
 796:	a1 e0       	ldi	r26, 0x01	; 1
 798:	b0 e0       	ldi	r27, 0x00	; 0
 79a:	ac 0f       	add	r26, r28
 79c:	bd 1f       	adc	r27, r29
 79e:	ea 0f       	add	r30, r26
 7a0:	fb 1f       	adc	r31, r27
 7a2:	8e e2       	ldi	r24, 0x2E	; 46
 7a4:	a8 2e       	mov	r10, r24
 7a6:	4b 01       	movw	r8, r22
 7a8:	80 1a       	sub	r8, r16
 7aa:	91 08       	sbc	r9, r1
 7ac:	0b 2d       	mov	r16, r11
 7ae:	10 e0       	ldi	r17, 0x00	; 0
 7b0:	11 95       	neg	r17
 7b2:	01 95       	neg	r16
 7b4:	11 09       	sbc	r17, r1
 7b6:	4f 3f       	cpi	r20, 0xFF	; 255
 7b8:	bf ef       	ldi	r27, 0xFF	; 255
 7ba:	5b 07       	cpc	r21, r27
 7bc:	21 f4       	brne	.+8      	; 0x7c6 <dtoa_prf+0x24c>
 7be:	d6 01       	movw	r26, r12
 7c0:	ac 92       	st	X, r10
 7c2:	11 96       	adiw	r26, 0x01	; 1
 7c4:	6d 01       	movw	r12, r26
 7c6:	64 17       	cp	r22, r20
 7c8:	75 07       	cpc	r23, r21
 7ca:	2c f0       	brlt	.+10     	; 0x7d6 <dtoa_prf+0x25c>
 7cc:	84 16       	cp	r8, r20
 7ce:	95 06       	cpc	r9, r21
 7d0:	14 f4       	brge	.+4      	; 0x7d6 <dtoa_prf+0x25c>
 7d2:	81 81       	ldd	r24, Z+1	; 0x01
 7d4:	01 c0       	rjmp	.+2      	; 0x7d8 <dtoa_prf+0x25e>
 7d6:	80 e3       	ldi	r24, 0x30	; 48
 7d8:	41 50       	subi	r20, 0x01	; 1
 7da:	51 09       	sbc	r21, r1
 7dc:	31 96       	adiw	r30, 0x01	; 1
 7de:	d6 01       	movw	r26, r12
 7e0:	11 96       	adiw	r26, 0x01	; 1
 7e2:	7d 01       	movw	r14, r26
 7e4:	40 17       	cp	r20, r16
 7e6:	51 07       	cpc	r21, r17
 7e8:	24 f0       	brlt	.+8      	; 0x7f2 <dtoa_prf+0x278>
 7ea:	d6 01       	movw	r26, r12
 7ec:	8c 93       	st	X, r24
 7ee:	67 01       	movw	r12, r14
 7f0:	e2 cf       	rjmp	.-60     	; 0x7b6 <dtoa_prf+0x23c>
 7f2:	64 17       	cp	r22, r20
 7f4:	75 07       	cpc	r23, r21
 7f6:	39 f4       	brne	.+14     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7f8:	96 33       	cpi	r25, 0x36	; 54
 7fa:	20 f4       	brcc	.+8      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 7fc:	95 33       	cpi	r25, 0x35	; 53
 7fe:	19 f4       	brne	.+6      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 800:	31 11       	cpse	r19, r1
 802:	01 c0       	rjmp	.+2      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 804:	81 e3       	ldi	r24, 0x31	; 49
 806:	f6 01       	movw	r30, r12
 808:	80 83       	st	Z, r24
 80a:	f7 01       	movw	r30, r14
 80c:	82 2f       	mov	r24, r18
 80e:	90 e2       	ldi	r25, 0x20	; 32
 810:	88 23       	and	r24, r24
 812:	19 f0       	breq	.+6      	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 814:	91 93       	st	Z+, r25
 816:	81 50       	subi	r24, 0x01	; 1
 818:	fb cf       	rjmp	.-10     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 81a:	f7 01       	movw	r30, r14
 81c:	e2 0f       	add	r30, r18
 81e:	f1 1d       	adc	r31, r1
 820:	10 82       	st	Z, r1
 822:	80 e0       	ldi	r24, 0x00	; 0
 824:	90 e0       	ldi	r25, 0x00	; 0
 826:	29 96       	adiw	r28, 0x09	; 9
 828:	ec e0       	ldi	r30, 0x0C	; 12
 82a:	0c 94 11 05 	jmp	0xa22	; 0xa22 <__epilogue_restores__+0xc>

0000082e <__ftoa_engine>:
 82e:	28 30       	cpi	r18, 0x08	; 8
 830:	08 f0       	brcs	.+2      	; 0x834 <__ftoa_engine+0x6>
 832:	27 e0       	ldi	r18, 0x07	; 7
 834:	33 27       	eor	r19, r19
 836:	da 01       	movw	r26, r20
 838:	99 0f       	add	r25, r25
 83a:	31 1d       	adc	r19, r1
 83c:	87 fd       	sbrc	r24, 7
 83e:	91 60       	ori	r25, 0x01	; 1
 840:	00 96       	adiw	r24, 0x00	; 0
 842:	61 05       	cpc	r22, r1
 844:	71 05       	cpc	r23, r1
 846:	39 f4       	brne	.+14     	; 0x856 <__ftoa_engine+0x28>
 848:	32 60       	ori	r19, 0x02	; 2
 84a:	2e 5f       	subi	r18, 0xFE	; 254
 84c:	3d 93       	st	X+, r19
 84e:	30 e3       	ldi	r19, 0x30	; 48
 850:	2a 95       	dec	r18
 852:	e1 f7       	brne	.-8      	; 0x84c <__ftoa_engine+0x1e>
 854:	08 95       	ret
 856:	9f 3f       	cpi	r25, 0xFF	; 255
 858:	30 f0       	brcs	.+12     	; 0x866 <__ftoa_engine+0x38>
 85a:	80 38       	cpi	r24, 0x80	; 128
 85c:	71 05       	cpc	r23, r1
 85e:	61 05       	cpc	r22, r1
 860:	09 f0       	breq	.+2      	; 0x864 <__ftoa_engine+0x36>
 862:	3c 5f       	subi	r19, 0xFC	; 252
 864:	3c 5f       	subi	r19, 0xFC	; 252
 866:	3d 93       	st	X+, r19
 868:	91 30       	cpi	r25, 0x01	; 1
 86a:	08 f0       	brcs	.+2      	; 0x86e <__ftoa_engine+0x40>
 86c:	80 68       	ori	r24, 0x80	; 128
 86e:	91 1d       	adc	r25, r1
 870:	df 93       	push	r29
 872:	cf 93       	push	r28
 874:	1f 93       	push	r17
 876:	0f 93       	push	r16
 878:	ff 92       	push	r15
 87a:	ef 92       	push	r14
 87c:	19 2f       	mov	r17, r25
 87e:	98 7f       	andi	r25, 0xF8	; 248
 880:	96 95       	lsr	r25
 882:	e9 2f       	mov	r30, r25
 884:	96 95       	lsr	r25
 886:	96 95       	lsr	r25
 888:	e9 0f       	add	r30, r25
 88a:	ff 27       	eor	r31, r31
 88c:	ee 53       	subi	r30, 0x3E	; 62
 88e:	ff 4f       	sbci	r31, 0xFF	; 255
 890:	99 27       	eor	r25, r25
 892:	33 27       	eor	r19, r19
 894:	ee 24       	eor	r14, r14
 896:	ff 24       	eor	r15, r15
 898:	a7 01       	movw	r20, r14
 89a:	e7 01       	movw	r28, r14
 89c:	05 90       	lpm	r0, Z+
 89e:	08 94       	sec
 8a0:	07 94       	ror	r0
 8a2:	28 f4       	brcc	.+10     	; 0x8ae <__ftoa_engine+0x80>
 8a4:	36 0f       	add	r19, r22
 8a6:	e7 1e       	adc	r14, r23
 8a8:	f8 1e       	adc	r15, r24
 8aa:	49 1f       	adc	r20, r25
 8ac:	51 1d       	adc	r21, r1
 8ae:	66 0f       	add	r22, r22
 8b0:	77 1f       	adc	r23, r23
 8b2:	88 1f       	adc	r24, r24
 8b4:	99 1f       	adc	r25, r25
 8b6:	06 94       	lsr	r0
 8b8:	a1 f7       	brne	.-24     	; 0x8a2 <__ftoa_engine+0x74>
 8ba:	05 90       	lpm	r0, Z+
 8bc:	07 94       	ror	r0
 8be:	28 f4       	brcc	.+10     	; 0x8ca <__ftoa_engine+0x9c>
 8c0:	e7 0e       	add	r14, r23
 8c2:	f8 1e       	adc	r15, r24
 8c4:	49 1f       	adc	r20, r25
 8c6:	56 1f       	adc	r21, r22
 8c8:	c1 1d       	adc	r28, r1
 8ca:	77 0f       	add	r23, r23
 8cc:	88 1f       	adc	r24, r24
 8ce:	99 1f       	adc	r25, r25
 8d0:	66 1f       	adc	r22, r22
 8d2:	06 94       	lsr	r0
 8d4:	a1 f7       	brne	.-24     	; 0x8be <__ftoa_engine+0x90>
 8d6:	05 90       	lpm	r0, Z+
 8d8:	07 94       	ror	r0
 8da:	28 f4       	brcc	.+10     	; 0x8e6 <__ftoa_engine+0xb8>
 8dc:	f8 0e       	add	r15, r24
 8de:	49 1f       	adc	r20, r25
 8e0:	56 1f       	adc	r21, r22
 8e2:	c7 1f       	adc	r28, r23
 8e4:	d1 1d       	adc	r29, r1
 8e6:	88 0f       	add	r24, r24
 8e8:	99 1f       	adc	r25, r25
 8ea:	66 1f       	adc	r22, r22
 8ec:	77 1f       	adc	r23, r23
 8ee:	06 94       	lsr	r0
 8f0:	a1 f7       	brne	.-24     	; 0x8da <__ftoa_engine+0xac>
 8f2:	05 90       	lpm	r0, Z+
 8f4:	07 94       	ror	r0
 8f6:	20 f4       	brcc	.+8      	; 0x900 <__stack+0x1>
 8f8:	49 0f       	add	r20, r25
 8fa:	56 1f       	adc	r21, r22
 8fc:	c7 1f       	adc	r28, r23
 8fe:	d8 1f       	adc	r29, r24
 900:	99 0f       	add	r25, r25
 902:	66 1f       	adc	r22, r22
 904:	77 1f       	adc	r23, r23
 906:	88 1f       	adc	r24, r24
 908:	06 94       	lsr	r0
 90a:	a9 f7       	brne	.-22     	; 0x8f6 <__ftoa_engine+0xc8>
 90c:	84 91       	lpm	r24, Z
 90e:	10 95       	com	r17
 910:	17 70       	andi	r17, 0x07	; 7
 912:	41 f0       	breq	.+16     	; 0x924 <__stack+0x25>
 914:	d6 95       	lsr	r29
 916:	c7 95       	ror	r28
 918:	57 95       	ror	r21
 91a:	47 95       	ror	r20
 91c:	f7 94       	ror	r15
 91e:	e7 94       	ror	r14
 920:	1a 95       	dec	r17
 922:	c1 f7       	brne	.-16     	; 0x914 <__stack+0x15>
 924:	e8 e6       	ldi	r30, 0x68	; 104
 926:	f0 e0       	ldi	r31, 0x00	; 0
 928:	68 94       	set
 92a:	15 90       	lpm	r1, Z+
 92c:	15 91       	lpm	r17, Z+
 92e:	35 91       	lpm	r19, Z+
 930:	65 91       	lpm	r22, Z+
 932:	95 91       	lpm	r25, Z+
 934:	05 90       	lpm	r0, Z+
 936:	7f e2       	ldi	r23, 0x2F	; 47
 938:	73 95       	inc	r23
 93a:	e1 18       	sub	r14, r1
 93c:	f1 0a       	sbc	r15, r17
 93e:	43 0b       	sbc	r20, r19
 940:	56 0b       	sbc	r21, r22
 942:	c9 0b       	sbc	r28, r25
 944:	d0 09       	sbc	r29, r0
 946:	c0 f7       	brcc	.-16     	; 0x938 <__stack+0x39>
 948:	e1 0c       	add	r14, r1
 94a:	f1 1e       	adc	r15, r17
 94c:	43 1f       	adc	r20, r19
 94e:	56 1f       	adc	r21, r22
 950:	c9 1f       	adc	r28, r25
 952:	d0 1d       	adc	r29, r0
 954:	7e f4       	brtc	.+30     	; 0x974 <__stack+0x75>
 956:	70 33       	cpi	r23, 0x30	; 48
 958:	11 f4       	brne	.+4      	; 0x95e <__stack+0x5f>
 95a:	8a 95       	dec	r24
 95c:	e6 cf       	rjmp	.-52     	; 0x92a <__stack+0x2b>
 95e:	e8 94       	clt
 960:	01 50       	subi	r16, 0x01	; 1
 962:	30 f0       	brcs	.+12     	; 0x970 <__stack+0x71>
 964:	08 0f       	add	r16, r24
 966:	0a f4       	brpl	.+2      	; 0x96a <__stack+0x6b>
 968:	00 27       	eor	r16, r16
 96a:	02 17       	cp	r16, r18
 96c:	08 f4       	brcc	.+2      	; 0x970 <__stack+0x71>
 96e:	20 2f       	mov	r18, r16
 970:	23 95       	inc	r18
 972:	02 2f       	mov	r16, r18
 974:	7a 33       	cpi	r23, 0x3A	; 58
 976:	28 f0       	brcs	.+10     	; 0x982 <__stack+0x83>
 978:	79 e3       	ldi	r23, 0x39	; 57
 97a:	7d 93       	st	X+, r23
 97c:	2a 95       	dec	r18
 97e:	e9 f7       	brne	.-6      	; 0x97a <__stack+0x7b>
 980:	10 c0       	rjmp	.+32     	; 0x9a2 <__stack+0xa3>
 982:	7d 93       	st	X+, r23
 984:	2a 95       	dec	r18
 986:	89 f6       	brne	.-94     	; 0x92a <__stack+0x2b>
 988:	06 94       	lsr	r0
 98a:	97 95       	ror	r25
 98c:	67 95       	ror	r22
 98e:	37 95       	ror	r19
 990:	17 95       	ror	r17
 992:	17 94       	ror	r1
 994:	e1 18       	sub	r14, r1
 996:	f1 0a       	sbc	r15, r17
 998:	43 0b       	sbc	r20, r19
 99a:	56 0b       	sbc	r21, r22
 99c:	c9 0b       	sbc	r28, r25
 99e:	d0 09       	sbc	r29, r0
 9a0:	98 f0       	brcs	.+38     	; 0x9c8 <__stack+0xc9>
 9a2:	23 95       	inc	r18
 9a4:	7e 91       	ld	r23, -X
 9a6:	73 95       	inc	r23
 9a8:	7a 33       	cpi	r23, 0x3A	; 58
 9aa:	08 f0       	brcs	.+2      	; 0x9ae <__stack+0xaf>
 9ac:	70 e3       	ldi	r23, 0x30	; 48
 9ae:	7c 93       	st	X, r23
 9b0:	20 13       	cpse	r18, r16
 9b2:	b8 f7       	brcc	.-18     	; 0x9a2 <__stack+0xa3>
 9b4:	7e 91       	ld	r23, -X
 9b6:	70 61       	ori	r23, 0x10	; 16
 9b8:	7d 93       	st	X+, r23
 9ba:	30 f0       	brcs	.+12     	; 0x9c8 <__stack+0xc9>
 9bc:	83 95       	inc	r24
 9be:	71 e3       	ldi	r23, 0x31	; 49
 9c0:	7d 93       	st	X+, r23
 9c2:	70 e3       	ldi	r23, 0x30	; 48
 9c4:	2a 95       	dec	r18
 9c6:	e1 f7       	brne	.-8      	; 0x9c0 <__stack+0xc1>
 9c8:	11 24       	eor	r1, r1
 9ca:	ef 90       	pop	r14
 9cc:	ff 90       	pop	r15
 9ce:	0f 91       	pop	r16
 9d0:	1f 91       	pop	r17
 9d2:	cf 91       	pop	r28
 9d4:	df 91       	pop	r29
 9d6:	99 27       	eor	r25, r25
 9d8:	87 fd       	sbrc	r24, 7
 9da:	90 95       	com	r25
 9dc:	08 95       	ret

000009de <__prologue_saves__>:
 9de:	2f 92       	push	r2
 9e0:	3f 92       	push	r3
 9e2:	4f 92       	push	r4
 9e4:	5f 92       	push	r5
 9e6:	6f 92       	push	r6
 9e8:	7f 92       	push	r7
 9ea:	8f 92       	push	r8
 9ec:	9f 92       	push	r9
 9ee:	af 92       	push	r10
 9f0:	bf 92       	push	r11
 9f2:	cf 92       	push	r12
 9f4:	df 92       	push	r13
 9f6:	ef 92       	push	r14
 9f8:	ff 92       	push	r15
 9fa:	0f 93       	push	r16
 9fc:	1f 93       	push	r17
 9fe:	cf 93       	push	r28
 a00:	df 93       	push	r29
 a02:	cd b7       	in	r28, 0x3d	; 61
 a04:	de b7       	in	r29, 0x3e	; 62
 a06:	ca 1b       	sub	r28, r26
 a08:	db 0b       	sbc	r29, r27
 a0a:	0f b6       	in	r0, 0x3f	; 63
 a0c:	f8 94       	cli
 a0e:	de bf       	out	0x3e, r29	; 62
 a10:	0f be       	out	0x3f, r0	; 63
 a12:	cd bf       	out	0x3d, r28	; 61
 a14:	09 94       	ijmp

00000a16 <__epilogue_restores__>:
 a16:	2a 88       	ldd	r2, Y+18	; 0x12
 a18:	39 88       	ldd	r3, Y+17	; 0x11
 a1a:	48 88       	ldd	r4, Y+16	; 0x10
 a1c:	5f 84       	ldd	r5, Y+15	; 0x0f
 a1e:	6e 84       	ldd	r6, Y+14	; 0x0e
 a20:	7d 84       	ldd	r7, Y+13	; 0x0d
 a22:	8c 84       	ldd	r8, Y+12	; 0x0c
 a24:	9b 84       	ldd	r9, Y+11	; 0x0b
 a26:	aa 84       	ldd	r10, Y+10	; 0x0a
 a28:	b9 84       	ldd	r11, Y+9	; 0x09
 a2a:	c8 84       	ldd	r12, Y+8	; 0x08
 a2c:	df 80       	ldd	r13, Y+7	; 0x07
 a2e:	ee 80       	ldd	r14, Y+6	; 0x06
 a30:	fd 80       	ldd	r15, Y+5	; 0x05
 a32:	0c 81       	ldd	r16, Y+4	; 0x04
 a34:	1b 81       	ldd	r17, Y+3	; 0x03
 a36:	aa 81       	ldd	r26, Y+2	; 0x02
 a38:	b9 81       	ldd	r27, Y+1	; 0x01
 a3a:	ce 0f       	add	r28, r30
 a3c:	d1 1d       	adc	r29, r1
 a3e:	0f b6       	in	r0, 0x3f	; 63
 a40:	f8 94       	cli
 a42:	de bf       	out	0x3e, r29	; 62
 a44:	0f be       	out	0x3f, r0	; 63
 a46:	cd bf       	out	0x3d, r28	; 61
 a48:	ed 01       	movw	r28, r26
 a4a:	08 95       	ret

00000a4c <_exit>:
 a4c:	f8 94       	cli

00000a4e <__stop_program>:
 a4e:	ff cf       	rjmp	.-2      	; 0xa4e <__stop_program>
